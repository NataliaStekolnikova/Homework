#Задачи для закрепления на занятии
# 1. Базовые операции со строками.
# Вводится строка. Удалить из нее все пробелы, после этого определить, является ли она палиндромом,
# т.е. одинаково пишется как с начала так и с конца.
s = input("Введите строку: ")
s = s.replace(" ", "")  # Удаление пробелов из строки
if s == s[::-1]:
    print("Строка является палиндромом")
else:
    print("Строка не является палиндромом")

# 2. Базовые операции со строками.
# Найти самое длинное слово в введенном предложении
s = input("Введите предложение: ")
words = s.split()
longest_word = max(words, key=len)
print("Самое длинное слово в предложении:", longest_word)

 # 3. Найти самое длинное слово в введенном предложении. Учтите что в предложении есть знаки препинания.
import re
sentence = input("Введите предложение: ")
words = re.findall(r'\b[\w-]+\b', sentence) # Разбиваем предложение на слова с помощью регулярного выражения, включая дефисы
longest_word = max(words, key=len)
print(f"Самое длинное слово: {longest_word}")

# 4. Вводится строка.
# Требуется удалить из нее повторяющиеся символы и все пробелы. Например, если было введено "abc cde def", то должно быть выведено "abcdef".
input_string = input("Введите строку: ")
unique_chars = set(input_string.replace(" ", "")) # преобразование во множество убирает все дубликаты по определению
unique_chars = sorted(unique_chars) # для выполнения условия задачи, сортируем элементы множества
print("Результат:", ''.join(unique_chars))

# 5. Посчитать количество строчных (маленьких) и прописных (больших) букв в введенной строке. Учитывать только английские буквы.
input_string = input("Введите строку: ")
lowercase_count = uppercase_count = 0
# Перебираем каждый символ в строке
for char in input_string:
    # Проверяем, является ли символ английской буквой
    if char.isalpha():
        if char.islower():
            lowercase_count += 1
        uppercase_count += 1
uppercase_count = uppercase_count - lowercase_count
print("Количество строчных букв: ", lowercase_count)
print("Количество прописных букв: ", uppercase_count)
git 